"use strict";(self.webpackChunkrileyjshaw_com=self.webpackChunkrileyjshaw_com||[]).push([[903],{9627:function(e,t,a){a.r(t),a.d(t,{Head:function(){return c},default:function(){return m}});var n=a(8453),l=a(6540);function r(e){const t=Object.assign({p:"p",a:"a",pre:"pre",code:"code",strong:"strong",ol:"ol",li:"li",h2:"h2",span:"span",blockquote:"blockquote",ul:"ul",em:"em",h3:"h3"},(0,n.R)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"I started a project called ",l.createElement(t.a,{href:"https://github.com/rileyjshaw/terra"},"Terra")," a few weeks ago. I added a conditional to ",l.createElement("code",{className:"language-javascript"},"init()")," that would complain if I’d already defined the library:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"(function (exports) {\n\tfunction init() {\n\t\tif (!exports.terra) {\n\t\t\t// do initialization things\n\t\t} else {\n\t\t\tthrow 'You’ve already defined terra. Pay attention…';\n\t\t}\n\t}\n\n\t// more stuff happens…\n\n\tinit();\n})(this);\n")),"\n",l.createElement(t.p,null,"I’ll admit that this is a really ugly pattern for handling namespaces, but ",l.createElement(t.a,{href:"#what-does-it-all-mean"},"even common patterns are affected by this"),". Let me take you on a journey through ",l.createElement(t.strong,null,"the biggest browser ",l.createElement(t.a,{href:"https://www.destroyallsoftware.com/talks/wat"},"wat")," I’ve ever seen.")),"\n",l.createElement(t.p,null,"I ran the code and the console yelled at me."),"\n",l.createElement("code",{className:"error"},"“You’ve already defined terra. Pay attention…”"),"\n",l.createElement(t.p,null,"Strange… but maybe I forgot a ",l.createElement("code",{className:"language-javascript"},"var")," somewhere. I set some breakpoints in DevTools and stepped through the execution."),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"The main IIFE is called"),"\n",l.createElement(t.li,null,"Some local variables are defined"),"\n",l.createElement(t.li,null,"init() is called.. wait, did I miss something?"),"\n",l.createElement(t.li,null,"window.terra is already defined????!!?!!!?!?!?!?!"),"\n",l.createElement(t.li,null,"Error is thrown, I get confused."),"\n"),"\n",l.createElement(t.p,null,"The only scripts on the page were ones that I’d written, and I definitely hadn’t defined ",l.createElement("code",{className:"language-javascript"},"terra"),". I switched to a new branch and deleted almost everything."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-markup"},'<!doctype html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Terra</title>\n</head>\n<body>\n  <div id="terra"></div>\n  <script>\n    ;(function ( exports ) {\n      function init () {\n        if ( !exports.terra ) {\n          console.log( \'Everything is awesome.\' );\n        } else {\n          console.log( \'The night is dark and full of terrors.\');\n        }\n      }\n\n      init();\n    }) ( this );\n  <\/script>\n</body>\n</html>\n')),"\n",l.createElement(t.p,null,"Do you see it? I didn’t yet, and was hella confused when the console returned:"),"\n",l.createElement("code",{className:"console"},"The night is dark and full of terrors."),"\n",l.createElement(t.p,null,"So I made it simpler:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-markup"},'<!doctype html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Terra</title>\n</head>\n<body>\n  <div id="terra"></div>\n  <script>\n    console.log( !window.terra );\n  <\/script>\n</body>\n</html>\n')),"\n",l.createElement(t.p,null,"…and got:"),"\n",l.createElement("code",{className:"console"},"False"),"\n",l.createElement(t.p,null,"Either someone had added a global property called ",l.createElement("code",{className:"language-javascript"},"terra")," to the latest build of Chrome, or it was adding that ",l.createElement("code",{className:"language-markup"},'<div id="terra">')," to the global namespace. But… that would make no sense. Browsers wouldn’t add element IDs to ",l.createElement("code",{className:"language-markup"},"window"),", would they?"),"\n",l.createElement(t.h2,{id:"they-would",style:{position:"relative"}},l.createElement(t.a,{href:"#they-would","aria-label":"they would permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"They would."),"\n",l.createElement(t.p,null,"I tried Firefox. Defined. I tried Safari. Defined. I tried IE. Super-duper defined. The room was spinning; I had read the scriptures of Crockford and Resig and this was blasphemy. How many times had I inadvertently defined ",l.createElement("code",{className:"language-javascript"},"window.test"),", ",l.createElement("code",{className:"language-javascript"},"window.baz"),", ",l.createElement("code",{className:"language-javascript"},"window.container"),"…"),"\n",l.createElement(t.h2,{id:"digging-deeper",style:{position:"relative"}},l.createElement(t.a,{href:"#digging-deeper","aria-label":"digging deeper permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Digging deeper"),"\n",l.createElement(t.p,null,"Unsurprisingly, it seems that Internet Explorer can be thanked for this awesome “feature”. Other browsers felt compelled to follow suit, and soon enough the behaviour made it into ",l.createElement(t.a,{href:"http://www.whatwg.org/specs/web-apps/current-work/#named-access-on-the-window-object"},"the official HTML spec"),"."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"The Window interface supports named properties. The supported property names at any moment consist of the following, in tree order, ignoring later duplicates:"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"the browsing context name of any child browsing context of the active document whose name is not the empty string,"),"\n",l.createElement(t.li,null,"the value of the name content attribute for all a, applet, area, embed, form, frameset, img, and object elements in the active document that have a non-empty name content attribute, and"),"\n",l.createElement(t.li,null,"the value of the id content attribute of any HTML element in the active document with a non-empty id content attribute."),"\n"),"\n"),"\n",l.createElement(t.p,null,"So, there you have it. ",l.createElement(t.strong,null,"Any elements with an ",l.createElement("code",{className:"language-markup"},"id")," or ",l.createElement("code",{className:"language-markup"},"name")," attribute will have a reference in the global namespace.")),"\n",l.createElement(t.h2,{id:"what-does-it-all-mean",style:{position:"relative"}},l.createElement(t.a,{href:"#what-does-it-all-mean","aria-label":"what does it all mean permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"What does it all mean?"),"\n",l.createElement(t.p,null,"Firstly, this does ",l.createElement(t.strong,null,"not")," make it okay for you to start interacting with the DOM using these variables. Cross-browser implementations are shaky, and hopefully at some point this will fade out of the spec. On top of that, any newly defined globals will overwrite these references. Stick with ",l.createElement("code",{className:"language-javascript"},"document.getElementById()")," and ",l.createElement("code",{className:"language-javascript"},"document.getElementsByName()"),". Or ",l.createElement("code",{className:"language-javascript"},"$()"),", if you prefer."),"\n",l.createElement(t.p,null,"These element references likely won’t cause you any trouble, especially if you’re being a good neighbor in the global namespace. If you’re using browserify (",l.createElement(t.a,{href:"https://scott.mn/2014/03/03/javascript_modules/"},"which you should be"),"), RequireJS, or any strict module system, just pick specific global variable names and kept them to a minimum."),"\n",l.createElement(t.p,null,l.createElement(t.em,null,"Weird stuff can happen")," if there’s a collision; let’s take a look at the 5 most common namespace-checking patterns for object literals:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"/*\nOption 1: var myApplication = myApplication || {};\nOption 2  if(!MyApplication) MyApplication = {};\nOption 3: var myApplication = myApplication = myApplication || {}\nOption 4: myApplication || (myApplication = {});\nOption 5: var myApplication = myApplication === undefined ? {} : myApplication;\n*/\n")),"\n",l.createElement(t.p,null,"Options 1, 3, and 5 shadow ",l.createElement("code",{className:"language-javascript"},"myApplication")," with the initial ",l.createElement("code",{className:"language-javascript"},"var")," declaration, so you’ll end up with ",l.createElement("code",{className:"language-javascript"},"myApplication")," equal to ",l.createElement("code",{className:"language-javascript"}),". Option 2 and 4 though? Not so lucky. Since there’s no ",l.createElement("code",{className:"language-javascript"},"var")," shadowing the variable, these patterns leave you with a DOM element sitting in place of your fresh new object. As soon as you try to iterate over the object’s properties or run one of its methods, you’re working with a different object than the one you expected."),"\n",l.createElement(t.p,null,"Here a few more ways that these new variables can get you in trouble (assuming here that we’ve defined an element with ",l.createElement("code",{className:"language-markup"},'name="ticker"'),"):"),"\n",l.createElement(t.h3,{id:"checking-for-existence",style:{position:"relative"}},l.createElement(t.a,{href:"#checking-for-existence","aria-label":"checking for existence permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Checking for existence"),"\n",l.createElement(t.p,null,"As we saw earlier, conditional code such as"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"if (!window.ticker) {\n\twindow.ticker = 0;\n}\nwindow.ticker++;\n")),"\n",l.createElement(t.p,null,"Can cause all sorts of errors and heartbreak down the road. ",l.createElement(t.a,{href:"#2014-03-12"},"Here’s a safer way to check"),"!"),"\n",l.createElement(t.h3,{id:"misspelling",style:{position:"relative"}},l.createElement(t.a,{href:"#misspelling","aria-label":"misspelling permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Misspelling"),"\n",l.createElement(t.p,null,"All of a sudden,"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"var picker = {};\npicker.item1 = 'Corn Flakes';\nticker.item2 = 'Buttons';\npicker.item3 = 'Hair';\n")),"\n",l.createElement(t.p,null,"Doesn’t throw a ReferenceError and the property we ",l.createElement(t.em,null,"meant")," to interact with isn’t touched."),"\n",l.createElement(t.h3,{id:"blocking-external-libraries",style:{position:"relative"}},l.createElement(t.a,{href:"#blocking-external-libraries","aria-label":"blocking external libraries permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Blocking external libraries"),"\n",l.createElement(t.p,null,"Sadly, you don’t have much control over this one. Other developers who aren’t as enlightened as me and you may write their libraries in such a way that named element references can block their initialization. A good way to avoid this is to"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"avoid using ",l.createElement("code",{className:"language-markup"},"id"),"s with the same name as libraries you’re using (duh), and"),"\n",l.createElement(t.li,null,"post an issue to the library’s repository mentioning that their library isn’t safe for loose-cannon-element-namers."),"\n"),"\n",l.createElement(t.h2,{id:"conclusion",style:{position:"relative"}},l.createElement(t.a,{href:"#conclusion","aria-label":"conclusion permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Conclusion"),"\n",l.createElement(t.p,null,"Though the globalization of element ",l.createElement("code",{className:"language-markup"},"id"),"s and ",l.createElement("code",{className:"language-markup"},"name"),"s really surprised me, the fact that it gets such little attention means that it’s probably not a huge deal. Regardless, ",l.createElement(t.strong,null,"adding all of these variables to the global namespace has no real advantage, and allows developers to make mistakes that are really annoying to debug.")," Apart from maintaining legacy code written by the few people who use this rule, I can’t see any reason to keep the behaviour in modern browsers."),"\n",l.createElement(t.p,null,"For now just keep smiling, and let’s all hope that someday soon we’ll be rid of them."),"\n",l.createElement(t.h2,{id:"addendums",style:{position:"relative"}},l.createElement(t.a,{href:"#addendums","aria-label":"addendums permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Addendums"),"\n",l.createElement(t.h3,{id:"2014-03-12",style:{position:"relative"}},l.createElement(t.a,{href:"#2014-03-12","aria-label":"2014 03 12 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2014-03-12"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"http://www.reddit.com/r/webdev/comments/2023ex/windowclusterfuck_a_tale_of_global_variables/cfz7qb9"},"Redditor")," ",l.createElement(t.a,{href:"https://github.com/mtackes"},"minrice2099")," came up with a clever way to check if a variable comes from a named element. Checking ",l.createElement("code",{className:"language-javascript"},"'x' in Object.keys( window )")," will return ",l.createElement("code",{className:"language-javascript"},"True")," if ",l.createElement("code",{className:"language-javascript"},"x")," is defined explicitly (with ",l.createElement("code",{className:"language-javascript"},"var")," or ",l.createElement("code",{className:"language-javascript"},"window."),") or is inherited through the prototype chain; otherwise, it will return ",l.createElement("code",{className:"language-javascript"},"False"),". This is different than checking ",l.createElement("code",{className:"language-javascript"},".hasOwnProperty")," because it will respect properties found up the prototype chain."),"\n",l.createElement(t.p,null,"From here, we can check existence using:"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"if ('x' in Object.keys(window)) {\n\t// do as you must…\n}\n")),"\n",l.createElement(t.p,null,"This works in all modern browsers, but use at your own risk if you’re looking to support past / future browsers."))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.R)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},o=a(2816);function c(e){let{data:t,...a}=e;return l.createElement(o.A,Object.assign({},a,{title:t.mdx.fields.title}))}function s(e){let{data:t,children:a}=e;const{mdx:n}=t,{fields:r}=n;return l.createElement("main",null,l.createElement("div",{className:"page-content"},l.createElement("article",{className:"blog-post-content prose prose-lg",role:"article"},l.createElement("header",null,l.createElement("h1",null,r.title),l.createElement("div",{className:"subheading"},l.createElement("time",null,"Posted ",r.date))),l.createElement("div",{className:"blog-post-markdown"},a))))}function m(e){return l.createElement(s,e,l.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-post-jsx-content-file-path-src-data-markdown-posts-published-2014-03-10-window-clusterfuck-md-58fd27b11add917f65b6.js.map