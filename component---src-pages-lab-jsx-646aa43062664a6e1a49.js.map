{"version":3,"file":"component---src-pages-lab-jsx-646aa43062664a6e1a49.js","mappings":"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","sources":["webpack://rileyjshaw.com/./src/components/ContentNode.jsx","webpack://rileyjshaw.com/./src/components/ContentGrid.jsx","webpack://rileyjshaw.com/./src/components/doodles/GameOver.jsx","webpack://rileyjshaw.com/./src/components/GridDoodles.jsx","webpack://rileyjshaw.com/./src/components/ProjectExplorer.jsx","webpack://rileyjshaw.com/./src/pages/lab.jsx"],"sourcesContent":["import React from 'react';\n\nimport cn from 'cnz';\n\nimport contentTypes from '../util/ContentTypes';\nimport {useRect} from '../util/hooks';\nimport AutoLink, {ExternalLink} from './AutoLink';\n\nimport './ContentNode.css';\n\n// TODO: Break this component and the grid fitting component out into separate\n//       files.\n// Each content type needs:\n//   \"uid\":\n//   \"type\":\n//   \"title\":\n//   \"date\":\nexport default React.memo(\n\tReact.forwardRef(function ContentNode(props, ref) {\n\t\tconst {\n\t\t\tEl = 'div',\n\t\t\ttype,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tlink,\n\t\t\trepo,\n\t\t\tuid,\n\t\t\ttags,\n\t\t\tDoodle,\n\t\t\t// Warning: `masonry` cannot change within the component’s lifetime.\n\t\t\tmasonry,\n\t\t\thidden,\n\t\t} = props;\n\n\t\tif (type === 'doodle') return <Doodle ref={ref} {...props} />;\n\n\t\tconst contentType = contentTypes[type];\n\t\tif (!contentType) return null;\n\t\tconst {className = '', readableType, shortType, Inner} = contentType;\n\n\t\tlet innerRef, innerRect, span;\n\t\tif (masonry) {\n\t\t\t[innerRef, innerRect] = useRect();\n\t\t\t// Inner: Math.ceil((height + 27) / (27 * 2))\n\t\t\t//                            ^ \"+ 27\" accounts for height falling within gap.\n\t\t\t//     (27 * 2) is the row + gap height ^\n\t\t\t// With outer padding: Math.ceil((height + 27 + 46) / (27 * 2))\n\t\t\t//                    = Math.ceil(height / 54) + 1\n\t\t\t// TODO(riley): Was this with the new design system.\n\t\t\t// const span = height && Math.ceil((height + 19) / 54) + 1;\n\t\t\tspan = innerRect && Math.ceil((innerRect.height + 82) / 130);\n\t\t}\n\n\t\treturn (\n\t\t\t<El\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'content-node',\n\t\t\t\t\tclassName,\n\t\t\t\t\ttype\n\t\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase(),\n\t\t\t\t\tmasonry && (innerRect ? 'measured' : 'transparent'),\n\t\t\t\t\thidden && 'visually-hidden',\n\t\t\t\t)}\n\t\t\t\tkey={uid}\n\t\t\t\tref={ref}\n\t\t\t\tstyle={span && masonry ? {gridRowEnd: `span ${span}`} : null}\n\t\t\t>\n\t\t\t\t{/* Note: might be able to make this more semantic. Sources:\n\t\t\thttps://stackoverflow.com/questions/12866008/html5-semantic-markup-for-blog-post-tags-and-categories\n\t\t\thttps://html.spec.whatwg.org/multipage/links.html#link-type-tag */}\n\t\t\t\t<div className=\"inner\" ref={innerRef}>\n\t\t\t\t\t<div className=\"content-type\">\n\t\t\t\t\t\t{shortType ?? readableType}\n\t\t\t\t\t</div>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{link ? (\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t<AutoLink\n\t\t\t\t\t\t\t\t\tto={link}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: title}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1 dangerouslySetInnerHTML={{__html: title}} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Inner {...props} />\n\t\t\t\t\t{tags && (\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<ul className=\"tags\">\n\t\t\t\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t\t\t\t<li key={tag}>{tag}</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</El>\n\t\t);\n\t}),\n);\n\n/*\ncase 'project':\n\tif (node.tags.includes('starred')) className = 'span-2';\n*/\n","import React, {useContext} from 'react';\n\nimport ContentNode from './ContentNode';\nimport {SettingsContext} from './SettingsProvider';\n\nimport './ContentGrid.css';\n\nexport default React.memo(\n\t({nodes, hiddenNodes = [], masonry, lazyLoadRef}) => {\n\t\tconst {theme, blockEmbeds} = useContext(SettingsContext);\n\t\treturn (\n\t\t\t<ul className={`content-grid${masonry ? ' masonry' : ''}`}>\n\t\t\t\t{nodes.map((node, i, {length}) => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\tmasonry={masonry}\n\t\t\t\t\t\tref={i === length - 1 ? lazyLoadRef : null}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{hiddenNodes.map(node => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\thidden={true}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t},\n);\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\n\nimport {useKeyPresses, useTypedText} from '../../util/hooks';\n\nimport './GameOver.css';\n\nconst textOptions = {\n\tloading: 'Loading…',\n\twin: 'You win',\n};\n\nfunction GameOver({className}, ref) {\n\tconst activeTimeout = useRef(null);\n\tconst [gameState, setGameState] = useState('game-over');\n\tconst mainText =\n\t\tuseTypedText(textOptions[gameState] ?? 'Game over', {delay: 30}) ||\n\t\t'\\u00A0';\n\tuseEffect(() => {\n\t\tactiveTimeout.current = setTimeout(() => {\n\t\t\tsetGameState('play-again');\n\t\t}, 1800);\n\t\treturn () => clearTimeout(activeTimeout.current);\n\t}, []);\n\tconst clickYes = useCallback(() => {\n\t\tsetGameState('loading');\n\t\tclearTimeout(activeTimeout.current);\n\t\tactiveTimeout.current = setTimeout(() => {\n\t\t\tsetGameState('game-over');\n\t\t\tactiveTimeout.current = setTimeout(\n\t\t\t\t() => setGameState('play-again'),\n\t\t\t\t1800,\n\t\t\t);\n\t\t}, 2400);\n\t}, []);\n\tconst clickNo = useCallback(() => {\n\t\tclearTimeout(activeTimeout.current);\n\t\tsetGameState('win');\n\t}, []);\n\tuseKeyPresses({y: {onDown: clickYes}, n: {onDown: clickNo}});\n\tconst playAgain = gameState === 'play-again';\n\treturn (\n\t\t<div\n\t\t\t{...(ref?.hasOwnProperty('current') ? {ref} : {})}\n\t\t\tclassName={`doodle doodle-game-over${\n\t\t\t\tclassName ? ` ${className}` : ''\n\t\t\t}`}\n\t\t>\n\t\t\t<p className=\"main-text\">{mainText}</p>\n\t\t\t<p\n\t\t\t\taria-hidden={!playAgain}\n\t\t\t\tclassName={`play-again${playAgain ? ' show' : ''}`}\n\t\t\t>\n\t\t\t\tPlay again?{' '}\n\t\t\t\t<button disabled={!playAgain} onClick={clickYes}>\n\t\t\t\t\tY\n\t\t\t\t</button>\n\t\t\t\t{' / '}\n\t\t\t\t<button disabled={!playAgain} onClick={clickNo}>\n\t\t\t\t\tN\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default GameOver;\n","import React from 'react';\n\nimport CycleText from './CycleText';\nimport TextGrid from './TextGrid';\nimport BackgroundGenerator from './doodles/BackgroundGenerator';\nimport CircleConstrainedLines from './doodles/CircleConstrainedLines';\nimport GameOver from './doodles/GameOver';\nimport Propellers from './doodles/Propellers';\nimport Riot from './doodles/Riot';\n\nimport './GridDoodles.css';\n\nexport default [\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<BackgroundGenerator className=\"content-node\" El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[React.forwardRef((_, ref) => <Propellers El=\"li\" ref={ref} />), 0.8],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<CircleConstrainedLines El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<GameOver className=\"content-node\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<Riot className=\"content-node\" ref={ref} />\n\t\t)),\n\t\t0.7,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<li className=\"doodle wavytext\" ref={ref}>\n\t\t\t\t{'rileyjshaw.com'.split('').map((letter, i, {length}) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tstyle={{animationDelay: `${(i - length) * 0.2}s`}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{letter}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</li>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<TextGrid\n\t\t\t\tsize={[3, 3]}\n\t\t\t\tclassPrefix=\"doingreat\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tDOINGREAT\n\t\t\t</TextGrid>\n\t\t)),\n\t\t0.1,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={50}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t▁▂▃▅▆▇▇▆▅▃▂▁\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.3,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"droplet\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={150}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t⊙⊚⦾⊛\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"circles\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={100}\n\t\t\t\tsize={[2, 2]}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t◯⦿◉◎\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((_, ref) => (\n\t\t\t<li className=\"content-node snowman doodle\" ref={ref}>\n\t\t\t\t☃\n\t\t\t</li>\n\t\t)),\n\t\t0.3,\n\t\t() => {\n\t\t\tconst month = new Date().getMonth();\n\t\t\treturn month < 4 || month === 11;\n\t\t},\n\t],\n].map(([Component, chance, fn]) => [\n\tComponent,\n\tfn ? () => fn() || Math.random() < chance : () => Math.random() < chance,\n]);\n","// TODO(RILEY): https://tympanus.net/Development/TiltHoverEffects/index.html\nimport {useStaticQuery, graphql} from 'gatsby';\nimport React, {Fragment, useState, useEffect, useMemo} from 'react';\n\nimport contentTypes from '../util/ContentTypes';\nimport allProjectsQuery from '../util/all-projects-query';\nimport {STORAGE_KEYS} from '../util/constants';\nimport {useViewport, useStickyState} from '../util/hooks';\nimport sortingMethods, {shuffle} from '../util/sorting-methods';\nimport {capitalize} from '../util/util';\nimport ContentGrid from './ContentGrid';\nimport gridDoodles from './GridDoodles';\n\nimport './ProjectExplorer.css';\n\nconst ProjectExplorer = React.memo(function ProjectExplorer(props) {\n\tconst [nodeTypes, version] = useMemo(() => {\n\t\tconst nodeTypes = Array.from(\n\t\t\tnew Set(props.nodes.map(n => n.type)),\n\t\t).sort((a, b) => a.localeCompare(b));\n\t\treturn [nodeTypes, `${nodeTypes.join('')}${sortingMethods.length}`];\n\t}, [props.nodes]);\n\n\tconst [ascending, setAscending] = useStickyState(\n\t\tfalse,\n\t\tSTORAGE_KEYS.labAscending,\n\t\t{version},\n\t);\n\tconst [sortIdx, setSortIdx] = useStickyState(0, STORAGE_KEYS.labSortIdx, {\n\t\tversion,\n\t});\n\tconst [typeStates, setTypeStates] = useStickyState(\n\t\t() => Array.from(nodeTypes).fill(true),\n\t\tSTORAGE_KEYS.labTypeStates,\n\t\t{version, serverState: []},\n\t);\n\n\tconst nSources =\n\t\ttypeStates.reduce((a, b) => a + b, 0) || typeStates.length;\n\n\tconst nodes = useMemo(() => {\n\t\tif (!typeStates.length) return null;\n\t\tconst {sortFn} = sortingMethods[sortIdx];\n\t\tconst checkedTypeNames = nodeTypes.filter((_, i) => typeStates[i]);\n\t\tconst [doodles, filtered] = (\n\t\t\tcheckedTypeNames.length\n\t\t\t\t? props.nodes.filter(node =>\n\t\t\t\t\t\tcheckedTypeNames.includes(node.type),\n\t\t\t\t\t)\n\t\t\t\t: props.nodes\n\t\t).reduce(\n\t\t\t(partitions, node) => {\n\t\t\t\tpartitions[node.type === 'doodle' ? 0 : 1].push(node);\n\t\t\t\treturn partitions;\n\t\t\t},\n\t\t\t[[], []],\n\t\t);\n\t\tconst sorted = sortFn(filtered);\n\t\tconst ordered = ascending ? sorted.reverse() : sorted;\n\t\t// Insert a few doodles into a random position.\n\t\tdoodles.forEach(doodle => {\n\t\t\tconst {shouldRender, ...rest} = doodle;\n\t\t\tif (shouldRender()) {\n\t\t\t\tordered.splice(\n\t\t\t\t\tMath.floor(Math.random() * ordered.length),\n\t\t\t\t\t0,\n\t\t\t\t\trest,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn ordered;\n\t}, [ascending, sortIdx, typeStates, props.nodes]);\n\n\treturn (\n\t\tnodes && (\n\t\t\t<div className=\"project-explorer\">\n\t\t\t\t<div className=\"filters-wrapper\">\n\t\t\t\t\t<div className=\"filters\">\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend>Show:</legend>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{nodeTypes.map((type, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={type}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\t\t\t\tchecked={typeStates[i]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {checked} = e.target;\n\t\t\t\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\t\t\t\tprevTypeStates => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedTypeStates =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevTypeStates,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedTypeStates[i] =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn updatedTypeStates;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-types-${type}`}>\n\t\t\t\t\t\t\t\t\t\t\t{`${contentTypes[type].readableType}s`}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"labs-clear labs-clear-types\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\tnew Array(nodeTypes.length).fill(\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t✖\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend>Sort by:</legend>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{sortingMethods.map(({title}, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={title}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\tchecked={sortIdx === i}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => setSortIdx(i)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-sort-${title}`}>\n\t\t\t\t\t\t\t\t\t\t\t{capitalize(title)}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend>Order:</legend>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"labs-order\"\n\t\t\t\t\t\t\t\t\tid=\"labs-order\"\n\t\t\t\t\t\t\t\t\tvalue=\"ascending\"\n\t\t\t\t\t\t\t\t\tchecked={ascending}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tsetAscending(e.target.checked)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-order\">Reverse</label>\n\t\t\t\t\t\t\t\t{/* TODO: Add the shuffle button back here!\n\n\t\t\t\t\t\t\t<button onClick={this.shuffleDisplayNodes}>\n\t\t\t\t\t\t\t\tShuffle\n\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"result-details\">\n\t\t\t\t\t\tFound <strong>{nodes.length}</strong> entries from{' '}\n\t\t\t\t\t\t<strong>{nSources}</strong> source\n\t\t\t\t\t\t{nSources === 1 ? '' : 's'}:\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<LazyGrid\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tsetIsFullyLoaded={props.setIsFullyLoaded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t);\n});\n\nconst LazyGrid = React.memo(({nodes, setIsFullyLoaded}) => {\n\tconst [renderLimit, setRenderLimit] = useState(20);\n\tconst [ref, inView, boundingClientRect] = useViewport({\n\t\ttrackPosition: true,\n\t});\n\n\t// If the last node is on or above the viewport, load the next 20 nodes.\n\t// Note that the “last” node might be higher up on the page, eg. if it has\n\t// a small footprint and squeezes into some top row masonry. Hence the on\n\t// *or above* the viewport check.\n\tuseEffect(() => {\n\t\tif (\n\t\t\t(inView || boundingClientRect?.bottom <= 0) &&\n\t\t\trenderLimit < nodes.length\n\t\t) {\n\t\t\tsetRenderLimit(l => l + 20);\n\t\t}\n\t}, [inView, boundingClientRect]);\n\n\tuseEffect(() => {\n\t\tsetRenderLimit(20);\n\t}, [nodes]);\n\n\tuseEffect(() => {\n\t\tsetIsFullyLoaded && setIsFullyLoaded(renderLimit >= nodes.length);\n\t}, [nodes.length, renderLimit]);\n\n\treturn (\n\t\t<ContentGrid\n\t\t\tmasonry\n\t\t\tnodes={nodes.slice(0, renderLimit)}\n\t\t\thiddenNodes={nodes.slice(renderLimit)}\n\t\t\tlazyLoadRef={ref}\n\t\t/>\n\t);\n});\n\nconst ProjectExplorerWrapper = React.memo(props => {\n\tconst {\n\t\tallTagsJson: {nodes: tags},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallTagsJson {\n\t\t\t\tnodes {\n\t\t\t\t\tname\n\t\t\t\t\treadable\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\tconst hiddenTypes = ['post', 'tumblr', 'commit'];\n\tconst allProjects = allProjectsQuery().filter(\n\t\tproject => !hiddenTypes.includes(project.type),\n\t);\n\tconst nodes = useMemo(\n\t\t() =>\n\t\t\tallProjects.concat(\n\t\t\t\tgridDoodles.map(([Doodle, shouldRender], i) => ({\n\t\t\t\t\tuid: `DOODLE_${i}`,\n\t\t\t\t\ttype: 'doodle',\n\t\t\t\t\tDoodle,\n\t\t\t\t\tshouldRender,\n\t\t\t\t})),\n\t\t\t),\n\t\t[allProjects],\n\t);\n\n\treturn <ProjectExplorer nodes={nodes} tags={tags} {...props} />;\n});\n\nexport default ProjectExplorerWrapper;\n\n/* Big TODO: Once tags are established and applied to each content node (lots\n   of manual work required before that happens), get filtering by tag back into\n   the component. Here’s an old snippet:\n\n\t\tconst filtered = checkedTagNames.length\n\t\t\t? filteredByType.filter(node =>\n\t\t\t\t\tcheckedTagNames[\n\t\t\t\t\t\tstate.filterType === 'any' ? 'some' : 'every'\n\t\t\t\t\t](tagName => node.tags && node.tags.includes(tagName))\n\t\t\t  )\n\t\t\t: filteredByType;\n\n\t\t// …\n\t\t// …then for the render:\n\t\t// …\n\n\t\t<legend>Match:</legend>\n\t\t<div className=\"inputs\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-any\"\n\t\t\t\tid=\"labs-filter-any\"\n\t\t\t\tvalue=\"any\"\n\t\t\t\tchecked={this.state.filterType === 'any'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-any\">Any</label>\n\t\t\t|\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-all\"\n\t\t\t\tid=\"labs-filter-all\"\n\t\t\t\tvalue=\"all\"\n\t\t\t\tchecked={this.state.filterType === 'all'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-all\">All</label>\n\t\t</div>\n\t\t<legend>Of:</legend>\n\t\t<div className=\"inputs\">\n\t\t\t{tags.map((tag, i) => (\n\t\t\t\t<Fragment key={tag.name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tid={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tvalue={tag.name}\n\t\t\t\t\t\tchecked={this.state.tagStates[i]}\n\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\tthis.handleTagStateChange(e, i)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={`labs-tags-${tag.name}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{tag.readable}\n\t\t\t\t\t</label>\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</div>\n\t\t<button\n\t\t\tclassName=\"labs-clear labs-clear-tags\"\n\t\t\tonClick={this.handleClearTagsClick}\n\t\t>\n\t\t\t✖\n\t\t</button>\n*/\n","import React, {useState} from 'react';\n\nimport BigQuote from '../components/BigQuote';\nimport GoUp from '../components/GoUp';\nimport ProjectExplorer from '../components/ProjectExplorer';\nimport SEO from '../components/SEO';\n\nexport function Head(props) {\n\treturn <SEO {...props} title=\"Lab\" />;\n}\n\nconst LabPage = () => {\n\tconst [isFullyLoaded, setIsFullyLoaded] = useState(false);\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"page-content\">\n\t\t\t\t<ProjectExplorer setIsFullyLoaded={setIsFullyLoaded} />\n\t\t\t</div>\n\t\t\t{isFullyLoaded && (\n\t\t\t\t<>\n\t\t\t\t\t<BigQuote quoteId=\"VOLTAIRE_BORING\" />\n\t\t\t\t\t<GoUp />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</main>\n\t);\n};\n\nexport default LabPage;\n"],"names":["React","props","ref","El","type","title","date","link","repo","uid","tags","Doodle","masonry","hidden","Object","assign","contentType","contentTypes","className","readableType","shortType","Inner","innerRef","innerRect","span","useRect","Math","ceil","height","cn","split","join","toLowerCase","key","style","gridRowEnd","AutoLink","to","dangerouslySetInnerHTML","__html","dateTime","replace","ExternalLink","map","tag","_ref","nodes","hiddenNodes","lazyLoadRef","theme","blockEmbeds","useContext","SettingsContext","node","i","_ref2","length","ContentNode","textOptions","loading","win","_textOptions$gameStat","activeTimeout","useRef","gameState","setGameState","useState","mainText","useTypedText","delay","useEffect","current","setTimeout","clearTimeout","clickYes","useCallback","clickNo","useKeyPresses","y","onDown","n","playAgain","hasOwnProperty","disabled","onClick","_","BackgroundGenerator","Propellers","CircleConstrainedLines","GameOver","Riot","letter","animationDelay","TextGrid","size","classPrefix","OuterElement","CycleText","ms","month","Date","getMonth","Component","chance","fn","random","ProjectExplorer","nodeTypes","version","useMemo","Array","from","Set","sort","a","b","localeCompare","sortingMethods","ascending","setAscending","useStickyState","STORAGE_KEYS","labAscending","sortIdx","setSortIdx","labSortIdx","typeStates","setTypeStates","fill","labTypeStates","serverState","nSources","reduce","sortFn","checkedTypeNames","filter","doodles","filtered","includes","partitions","push","sorted","ordered","reverse","forEach","doodle","shouldRender","rest","splice","floor","Fragment","name","id","value","checked","onChange","e","target","prevTypeStates","updatedTypeStates","htmlFor","capitalize","LazyGrid","setIsFullyLoaded","renderLimit","setRenderLimit","inView","boundingClientRect","useViewport","trackPosition","bottom","l","ContentGrid","slice","allTagsJson","useStaticQuery","hiddenTypes","allProjects","allProjectsQuery","project","concat","gridDoodles","_ref3","Head","SEO","LabPage","isFullyLoaded","BigQuote","quoteId","GoUp"],"sourceRoot":""}