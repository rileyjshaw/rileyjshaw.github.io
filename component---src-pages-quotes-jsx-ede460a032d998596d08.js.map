{"version":3,"file":"component---src-pages-quotes-jsx-ede460a032d998596d08.js","mappings":"6IA2CA,IArCA,SAAcA,GAAW,IAAV,MAACC,GAAMD,EACrB,MAAM,QAACE,EAAO,KAAEC,GAAQF,EACxB,IAAI,OAACG,EAAM,OAAEC,GAAUJ,EACnBG,GACHA,EACCE,EAAAA,cAAAA,EAAAA,SAAA,KAAE,IACAA,EAAAA,cAAA,YAAOF,GAAc,KAGpBD,IACHC,EAASE,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAIL,GAAOC,IAE3BC,IACHD,EACCE,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KACED,EAAO,KAAGD,KAINC,IACNF,IACHE,EAASC,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAIL,GAAOE,IAE/BD,EAASE,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAGD,IAEf,MAAMI,EAAQP,EAAQQ,MAAM,MAE5B,OACCJ,EAAAA,cAAA,cAAYH,KAAMA,EAAMQ,UAAU,cAChCF,EAAMG,IAAI,CAACC,EAAMC,IACjBR,EAAAA,cAAA,KAAGS,IAAKD,GAAID,IAEZT,GAAUE,EAAAA,cAAA,cAASF,GAGvB,C,6GCnCO,SAASY,EAAKC,GACpB,OAAOX,EAAAA,cAACY,EAAAA,EAAGC,OAAAC,OAAA,GAAKH,EAAK,CAAEI,MAAM,eAC9B,CA+BA,UA7BeC,KACd,MACCC,uBAAwBC,MAAOC,KAC5BC,EAAAA,EAAAA,gBAAe,cAenB,OACCpB,EAAAA,cAAA,MAAIK,UAAU,cACZc,EAAOb,IAAIX,GACXK,EAAAA,cAAA,MAAIS,IAAKd,EAAM0B,KACdrB,EAAAA,cAACsB,EAAAA,EAAK,CAAC3B,MAAOA,O","sources":["webpack://rileyjshaw.com/./src/components/Quote.jsx","webpack://rileyjshaw.com/./src/pages/quotes.jsx"],"sourcesContent":["import React from 'react';\n\nimport AutoLink from './AutoLink';\n\nimport './Quote.css';\n\nfunction Quote({quote}) {\n\tconst {content, cite} = quote;\n\tlet {source, author} = quote;\n\tif (source) {\n\t\tsource = (\n\t\t\t<>\n\t\t\t\t“<cite>{source}</cite>”\n\t\t\t</>\n\t\t);\n\t\tif (cite) {\n\t\t\tsource = <AutoLink to={cite}>{source}</AutoLink>;\n\t\t}\n\t\tif (author) {\n\t\t\tsource = (\n\t\t\t\t<>\n\t\t\t\t\t– {author}, {source}\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t} else if (author) {\n\t\tif (cite) {\n\t\t\tauthor = <AutoLink to={cite}>{author}</AutoLink>;\n\t\t}\n\t\tsource = <>– {author}</>;\n\t}\n\tconst lines = content.split('\\n');\n\n\treturn (\n\t\t<blockquote cite={cite} className=\"site-quote\">\n\t\t\t{lines.map((line, i) => (\n\t\t\t\t<p key={i}>{line}</p>\n\t\t\t))}\n\t\t\t{source && <footer>{source}</footer>}\n\t\t</blockquote>\n\t);\n}\n\nexport default Quote;\n","import {graphql, useStaticQuery} from 'gatsby';\nimport React from 'react';\n\nimport Quote from '../components/Quote';\nimport SEO from '../components/SEO';\n\nexport function Head(props) {\n\treturn <SEO {...props} title=\"All quotes\" />;\n}\n\nconst Quotes = () => {\n\tconst {\n\t\tallCombinedQuotesJson: {nodes: quotes},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallCombinedQuotesJson(sort: {author: ASC}) {\n\t\t\t\tnodes {\n\t\t\t\t\tuid\n\t\t\t\t\tcontent\n\t\t\t\t\tauthor\n\t\t\t\t\tsource\n\t\t\t\t\tcite\n\t\t\t\t\trelatedLink\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\treturn (\n\t\t<ul className=\"all-quotes\">\n\t\t\t{quotes.map(quote => (\n\t\t\t\t<li key={quote.uid}>\n\t\t\t\t\t<Quote quote={quote} />\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default Quotes;\n"],"names":["_ref","quote","content","cite","source","author","React","AutoLink","to","lines","split","className","map","line","i","key","Head","props","SEO","Object","assign","title","Quotes","allCombinedQuotesJson","nodes","quotes","useStaticQuery","uid","Quote"],"sourceRoot":""}